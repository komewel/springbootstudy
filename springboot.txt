spring.io -> project -> springtool4 -> Spring Tools 4 for Eclipse 
하단에 가장 마지막(4.18.1버전) 다운로드 -> 이클립스 버전(4.19)이랑 버전을 맞추자 ->
페이지 하단에 project wiki 가서 오른쪽에 Installation (latest Release) -> 
Previous Releases Eclipse -> Spring Tools 4.10.0 (Changelog) 가장 상단 파일 다운로드
(우리가 지금까지 쓰던게 3버전 지금 다운받은게 4)
-> 아이콘이 커피 모양(자바랑 연결되있는 상태)이면 더블클릭으로 풀어준다. 
-> 폴더가 만들어진다(끝)

-> 아이콘이 다른모양(압축파일 아이콘) -> 파일이 있는곳에서 bash를 킨다 -> 다운로드 받은 jar파일명을 복사한다. -> java -jar (복사한거 붙여넣기) -> 폴더가 만들어진다 (끝)
(ctrl + c : 취소)

--> 다 완료되었으면 lombok설치(lombok도 위랑 비슷)

4 버전 특징 
- legacy project 지원을 안해준다.
=============>>> Spring Boot 로 변경
=============>>> start.spring.io에서 만든다. 그리고 import(프로젝트 만드는곳이 따로 있다, 
start.spring.io 부트프로젝트를 만들어서 임포트를 하는것이다.)
	
- jsp 지원이 없다 
=============>>> html로 변경(원래는 jstl로 자바코드를 태그화 시켜서 사용했는데 이게 안되므로 
, 타임리프를 사용한다(thymeleaf, java template engine, 자바가 채택한 공식엔진))

src/main/webapp 디렉터리가 없다.
=======>>> src/main/resources 다른곳으로 재배치

web page를 지원안해주기 때문에 인코딩을 따로 해줄 필요가 없다 
 help -> eclipse marketplace -> web developer 검색 -> 3번쨰꺼 jsp 포함 버전 다운로드
-> 따로 체크할건 없고 필수요소만 다운로드 받으면 된다. -> 동의하고 피니쉬 
-----------------------------------------------------------------------------
프로젝트 생성
start.spring.io 접속 project(maven) , language(java) , springboot(2.7.12 버전) ,
group : com.gdu
artifact : home
packaging : war 
java : 11
오른쪽 add defendencies : 라이브러리 추가를 알아서 해주는 
				<developer tools> 
				spring boot dev tools : 코드를 고치면 서버 리로딩을 빠르게 해줌
				lombok
				<web>
				spring web : 아파치 톰캣을 기본제공한다(boot프로젝트에서는 톰캣을
						라이브러리(내장톰캣) 처럼 쓸수 있다.)
				<template engines>
				thymeleaf : html의 자바코드를 삽입할수 있게 해준다.(=jstl이 
						하던 역할)
				<sql>
				mybatis framework
				mysql driver
				<messaging>
				web socket(필수 x) : 채팅 서비스 제공 
				<i/o>
				java mail sender : 이메일 보내주는 기능
				quartz scheduler :  스케쥴러 기능
---> generate 버튼 누르고 
장점 : 메이븐을 안쓰고 여기서 추가하면 그동안 우리가 쓰던 관련된 디펜던시가 한번에 들어간다
